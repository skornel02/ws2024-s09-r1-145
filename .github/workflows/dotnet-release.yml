# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET Release

on: 
  push:
    tags: 
      - v*

permissions: 
  contents: write  

jobs:
  release:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - uses: pnpm/action-setup@v2.2.4 
      with:
        version: 7.12.2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: 16.18.0
        cache: 'pnpm'
        cache-dependency-path: Frontend/pnpm-lock.yaml

    - name: Rust setup
      uses: dtolnay/rust-toolchain@stable
    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
        workspaces: 'Frontend/src-tauri'

    - name: Install frontend
      run: pnpm install --frozen-lockfile
      working-directory: ./Frontend
    - name: Build Task 2 (site)
      run: pnpm build
      working-directory: ./Frontend

    - name: Restore dependencies backend
      run: dotnet restore
    - name: Build backend
      run: dotnet build --no-restore
    - name: Publish Task 1 (api)
      run: dotnet publish -c Release -p:Publishdir=../Release

    - name: Build Task 3 (app)
      run: pnpm tauri build
      working-directory: ./Frontend
    - name: Move application
      run: mv "./Frontend/src-tauri/target/release/Frontend.exe" "./Release/UI.exe"

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/v')
      with:
        files: |
          Release/API.exe
          Release/appsettings.json
          Release/UI.exe
